<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lec.spring.repository.ChatRepository">
    <sql id="SELECT_CHAT">
        SELECT
        room_id,
        post_id,
        buyer_id,
        createDate,
        lastUpdateDate,
        subject,
        roomState
        FROM
        s1_chatroom
        WHERE
        1 = 1
    </sql>

    <select id="findRoomById" resultType="com.lec.spring.domain.ChatRoom">
        <include refid="SELECT_CHAT"/>
        AND room_id = #{room_id}
    </select>
    <select id="findAllRoom" resultType="com.lec.spring.domain.ChatRoom">
        Select * FROM s1_chatroom ORDER BY room_id
    </select>
    <select id="findMessageFromRoomId" parameterType="int" resultType="com.lec.spring.domain.ChatMessage">
        Select * FROM s1_chatmessage WHERE room_id = #{room_id} ORDER BY chat_id
    </select>
    <select id="findRoomByPostAndBuyer"  parameterType="int" resultType="com.lec.spring.domain.ChatRoom">
        <include refid="SELECT_CHAT"/>
        AND buyer_id = #{Buyer_id} AND post_id = #{Post_id}
    </select>
    <select id="getUser"  resultType="com.lec.spring.domain.User" parameterType="int">
        Select * FROM s1_User WHERE id = #{user_id}
    </select>

    <select id="getPostData"  parameterType="int" resultType="com.lec.spring.domain.Post">
        Select * FROM s1_post WHERE post_id = #{post_id}
    </select>

    <insert id="createChatRoom" flushCache="true" parameterType="com.lec.spring.domain.ChatRoom"
            useGeneratedKeys="true" keyColumn="room_id" keyProperty="room_id">
        INSERT INTO s1_chatroom
        (post_id, buyer_id, createDate, lastUpdateDate, subject, roomState)
        VALUES
        (#{post_id}, #{buyer_id}, #{createDate}, #{lastUpdateDate}, #{subject}, #{roomState})
    </insert>

    <update id="updateRoomLastDate" flushCache="true" parameterType="map">
        UPDATE s1_chatroom
        SET lastUpdateDate = #{lastUpdateDate}
        WHERE room_id = #{room_id}
    </update>

    <update id="updateRoomState" flushCache="true" parameterType="int">
        UPDATE s1_chatroom
        SET roomState = #{roomState}
        WHERE post_id = #{post_id}
    </update>
    <!--chatMessage -->

    <!--
     - 필요한 작업목록
     - 하나의 포스트에 대한 모든 채팅방리스트
     -
     -->

</mapper>