<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lec.spring.repository.CommentRepository">
    <resultMap id="mapUser" type="com.lec.spring.domain.User">
        <result column="u_id" property="id"/>
        <result column="u_username" property="username"/>
        <result column="u_password" property="password"/>
        <result column="u_name" property="name"/>
        <result column="u_email" property="email"/>
        <result column="u_regdate" property="registDate"/>
    </resultMap>

    <resultMap id="mapComment" type="com.lec.spring.domain.Comment">
        <result column="c_id" property="id"/>
        <result column="c_content" property="content"/>
        <result column="c_regdate" property="regdate"/>
        <result column="c_post_id" property="post_id"/>
        <collection property="user" resultMap="mapUser"/>
    </resultMap>

    <select id="findByPost" resultMap="mapComment">
        SELECT
            c.id AS "c_id",
            c.content AS "c_content",
            c.regdate AS "c_regdate",
            c.post_id AS "c_post_id",
            u.id AS "u_id",
            u.username AS "u_username",
            u.name AS "u_name",
            u.email AS "u_email",
            u.registDate AS "u_registDate"
        FROM s1_comment c
        LEFT JOIN s1_user u ON c.user_id = u.id
        LEFT JOIN s1_post p ON c.post_id = p.post_id
        WHERE c.post_id = #{post_id}
        ORDER BY c.id DESC
    </select>

    <insert id="save" flushCache="true"
            parameterType="com.lec.spring.domain.Comment"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO s1_comment (user_id, post_id, content, regdate)
        VALUES (#{user.id}, #{post_id}, #{content}, NOW())
    </insert>

    <delete id="deleteById" flushCache="true">
        DELETE FROM s1_comment WHERE id = #{id};
    </delete>
</mapper>